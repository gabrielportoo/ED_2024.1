- Problema 01
Considere uma pilha inicialmente vazia. qual resultado das
seguintes operações:

pilha.empilha(10) [10]
pilha.empilha(22) [10, 22]
pilha.desempilha() [10]
pilha.empilha(14) [10, 14]
pilha.empilha(33) [10, 14, 33]
pilha.desempilha() [10, 14]
pilha.desempilha() [10]
pilha.empilha(33) [10, 33]
pilha.empilha(4) [10, 33, 4]
pilha.empilha(33) [10, 33, 4, 33]
pilha.desempilha() [10, 33, 4]
pilha.empilha(4) [10, 33, 4, 4]
pilha.empilha(65) [10, 33, 4, 4, 65]
pilha.empilha(75) [10, 33, 4, 4, 65, 75]
pilha.desempilha() [10, 33, 4, 4, 65]

Escreva o estado final da pilha, incluindo seus elementos na ordem correta.

Estado Final: [10, 33, 4, 4, 65]

- Problema 02

Considere uma fila inicialmente vazia. qual resultado das
seguintes operações:

fila.enfileira(33) [33]
fila.enfileira(45) [33, 45]
fila.desenfileira() [45]
fila.enfileira(22) [45, 22]
fila.enfileira(33) [45, 22, 33]
fila.desenfileira() [22, 33]
fila.desenfileira() [33]
fila.enfileira(12) [33, 12]
fila.desenfileira() [12]
fila.enfileira(86) [12, 86]
fila.enfileira(12) [12, 86, 12]
fila.enfileira(5) [12, 86, 12, 5]
fila.desenfileira() [86, 12, 5]
fila.enfileira(5) [86, 12, 5, 5]
fila.enfileira(6) [86, 12, 5, 5, 6]
fila.enfileira(8) [86, 12, 5, 5, 6, 8]

Escreva o estado final da fila, incluindo seus elementos na ordem correta.

Estado final: [86, 12, 5, 5, 6, 8]

- Problema 03
Considere uma árvore binária de busca (BST) inicialmente
vazia. qual resultado das seguintes operações:

arvore.insere(45) 
arvore.insere(5)
arvore.insere(12) 
arvore.insere(60)
arvore.insere(13)
arvore.insere(90)
arvore.insere(48)
arvore.insere(2)
arvore.insere(84)
arvore.insere(79)

Desenhe a árvore final após da inserção desses valores.